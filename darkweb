#!/usr/bin/env bash
##Dark Web Tools Menu Script by CSI Linux v2021.1.17.1
##tools@csilinux.com - Jeremy Martin

#define choices
opt1="Turn on/off CSI TorVPN (Route all traffic through Tor)"
opt2="Turn on/off CSI Gateway with Whonix (Whonix Gateway Required)"
opt3="Run the Tor Browser (Only the Browser uses Tor)"
opt10="Search Tor Search Engines"
opt11="Bitcoin Search"
opt20="OnionShare"
#opt21="Configure Tor Hidden Service"
opt99="Exit"
timestamp=$(date +%Y-%m-%d:%H:%M)
closecase=$(date +%Y%m%d%H%M)
fqdnregex="\b((xn--)?[a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}\b"

source /opt/csitools/sharedfunctions

Menu () {
darkwebmenu=$(zenity --list  --title "Dark Web Tools" --text "What do you want to do?" --width=450 --height=350 --radiolist --column "Pick" --column "Option" TRUE "$opt1" FALSE "$opt2" FALSE "$opt3" FALSE "$opt10" FALSE "$opt11" FALSE "$opt20" FALSE "$opt99" 2> >(grep -v 'GtkDialog' >&2)) 
echo "Pick your option to run..."
_stopwatch; echo "$stopwatch: Running Dark Web OSINT." >> ~/Cases/$cases/audit.log
case $darkwebmenu in			
	
	$opt1 ) #CSI TorVPN
		_stopwatch; echo "$stopwatch: Running CSI TorVPN." >> ~/Cases/$cases/audit.log
		xterm -e /opt/csitools/CSI_TorVPN
		_directip; _stopwatch; echo "$stopwatch: Direct IP: " $direct "("$direct_city:$direct_country" )- $direct_ISP" >> ~/Cases/$cases/audit.log
		Menu
	;;

	$opt2 ) #CSI Gateway
		_stopwatch; echo "$stopwatch: Running CSI Gateway for Whonix." >> ~/Cases/$cases/audit.log
		xterm -e /opt/csitools/CSI_Gateway
		_directip; _stopwatch; echo "$stopwatch: Direct IP: " $direct "("$direct_city:$direct_country" )- $direct_ISP" >> ~/Cases/$cases/audit.log
		Menu
	;;

	$opt3 ) #Tor Browser
		_stopwatch; echo "$stopwatch: Running Tor Browser." >> ~/Cases/$cases/audit.log
		xterm -e sudo apt install torbrowser-launcher
		/home/csi/.local/share/torbrowser/tbb/x86_64/tor-browser_en-US/Browser/start-tor-browser /opt/csitools/CSI-Bookmarks.html 
		_directip; _stopwatch; echo "$stopwatch: Direct IP: " $direct "("$direct_city:$direct_country" )- $direct_ISP" >> ~/Cases/$cases/audit.log
		Menu
	;;

	$opt10 ) #OnionSearch
		searchterm=$(zenity --entry --title "OnionSearch" --text "Enter keyword to search for" --entry-text "" 2> >(grep -v 'GtkDialog' >&2))
		if [ ! -z "$darkwebmenu" ]; then
			_stopwatch; echo "$stopwatch: Running Onion Search for $searchterm." >> ~/Cases/$cases/audit.log
			_directip; _stopwatch; echo "$stopwatch: Direct IP: " $direct "("$direct_city:$direct_country" )- $direct_ISP" >> ~/Cases/$cases/audit.log
			mkdir ~/Cases/$cases/Export/DarkWeb
			#Run Tool
			echo "This will take some time"
			zenity --width 300 --info --text="This Tor Search will take some time...  Get some caffeine or take a break.\nCheck the ~/Cases/$cases/Export/DarkWeb/ folder when it is done" &
			xterm -e /bin/bash -l -c "onionsearch "$searchterm" --output ~/Cases/$cases/Export/DarkWeb/$searchterm.txt && gedit ~/Cases/$cases/Export/DarkWeb/$searchterm.txt"
			zenity --width 300 --info --text="When the OnoionSearch is done, press ok to convert into an HTML file to view with your browser." &
			/opt/csitools/onionsearch2html $searchterm.txt | tee $searchterm.html && google-chrome-stable-stable $searchterm.html
			
		fi	
		Menu
	;;
	
	$opt11 ) #Bitcoin Search
		_stopwatch; echo "$stopwatch: Running Bitcoin Search." >> ~/Cases/$cases/audit.log
		mkdir ~/Cases/$cases/Export/DarkWeb
		cd ~/Cases/$cases/Export/DarkWeb
		mkdir bitcoins
		cd bitcoins
		#Run Tool
		/opt/csitools/cryptosearch 
		_stopwatch; echo "$stopwatch: Running Bitcoin Search." >> ~/Cases/$cases/audit.log
		Menu
	;;
	
	$opt21 ) #Onionshare
		_stopwatch; echo "$stopwatch: Running OnionShare GUI to share files." >> ~/Cases/$cases/audit.log
		mkdir ~/Cases/$cases/OnionShare 2>/dev/null
		cd ~/Cases/$cases/OnionShare
		cp ../README.TXT .
		#Run Tool
		onionshare-gui --filenames ~/Cases/$cases/OnionShare/* &
		Menu
	;;
		
	$opt22 ) #Hidden Service
		_stopwatch; echo "$stopwatch: Starting a Tor Hidden Service." >> ~/Cases/$cases/audit.log
		mkdir ~/Cases/$cases/HiddenService 2>/dev/null
		cd ~/Cases/$cases/HiddenService
		#Run Tool
		key=$(zenity --password --title "Enter you SUDO password." --text "Enter you SUDO password." --width 400); echo $key

		
				
		if grep -R "HiddenServiceDir /home/csi/Cases/$cases/HiddenService" /etc/tor/torrc
		then
		    	echo "Service Already Set"
		else
			
			PORT=$(zenity --forms --title="Hidden Service Setup" --text="Enter the URL, Port, and Case name" --add-entry="Port (80, 443, etc)")
			echo $key | sudo -S chown csi:csi /etc/tor/torrc
			echo $key | sudo -S echo "HiddenServiceDir /home/csi/Cases/$cases/HiddenService" >> /etc/tor/torrc
			echo $key | sudo -S echo "HiddenServicePort $PORT 127.0.0.1:$PORT" >> /etc/tor/torrc
			echo $key | sudo -S chown root:root /etc/tor/torrc
			echo $key | sudo -S service tor restart
		fi		
		
		
		
		Menu
	;;
	
	$opt99 ) #Exit
		exit
	;;
	*) exit
esac
}

if [ -z "$1" ]
then
	echo "Fresh Run"
	trap finish EXIT
else
	echo "$1 passed"
fi

StartCase "$1"
Menu
